<resources>
    <string name="app_name">Play With Compose</string>
    <string name="title_activity_dice_roller">DiceRoller</string>
    <string name="title_activity_birthday_Card">Birthday Card</string>
    <string name="roll">Roll</string>
    <string name="select_lemon">Tap the lemon tree to select a lemon</string>
    <string name="squeeze_lemon">Keep tapping the lemon to squeeze it</string>
    <string name="drink_lemonade">Tap the lemonade to drink it</string>
    <string name="tap_empty_glass">Tap the empty glass to start again</string>
    <string name="lemon_tree_content_description">Lemon tree</string>
    <string name="lemon_content_description">Lemon</string>
    <string name="glass_of_lemonade_content_description">Glass of lemonade</string>
    <string name="empty_glass_content_description">Empty glass</string>
    <string name="title_activity_lemonade">Lemonade</string>
    <string name="happy_birthday_text">Happy Birthday Sam!</string>
    <string name="from_sender">From Anjali</string>
    <string name="heading_compose_tutorial">Jetpack Compose tutorial</string>
    <string name="paragraph_1">Jetpack Compose is a modern toolkit for building native Android UI. Compose simplifies and accelerates UI development on Android with less code, powerful tools, and intuitive Kotlin APIs.</string>
    <string name="paragraph_2">In this tutorial, you build a simple UI component with declarative functions. You call Compose functions to say what elements you want and the Compose compiler does the rest. Compose is built around Composable functions. These functions let you define your app\'s UI programmatically because they let you describe how it should look and provide data dependencies, rather than focus on the process of the UI\'s construction, such as initializing an element and then attaching it to a parent. To create a Composable function, you add the @Composable annotation to the function name.</string>
    <string name="title_activity_compose_tutorial">ComposeTutorial</string>
    <string name="title_activity_compose_quadrant">ComposeQuadrant</string>
    <string name="text_composable_string">Text composable</string>
    <string name="text_composable_string_description">Displays text and follows the recommended Material Design guidelines.</string>
    <string name="image_composable_string">Image composable</string>
    <string name="image_composable_string_description">Creates a composable that lays out and draws a given Painter class object.</string>
    <string name="row_composable_string">Row composable</string>
    <string name="row_composable_string_description">A layout composable that places its children in a horizontal sequence.</string>
    <string name="column_composable_string">Column composable</string>
    <string name="column_composable_string_description">A layout composable that places its children in a vertical sequence.</string>
    <string name="calculate_tip">Calculate Tip</string>
    <string name="bill_amount">Bill Amount</string>
    <string name="tip_amount">Tip Amount: %s</string>
    <string name="title_activity_tip_time">TipTime</string>
    <string name="how_was_the_service">Tip Percentage</string>
    <string name="round_up_tip">Round up tip?</string>


</resources>